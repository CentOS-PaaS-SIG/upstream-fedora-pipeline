
def libraries = ['upstream-fedora-pipeline': ['master', 'https://github.com/CentOS-PaaS-SIG/upstream-fedora-pipeline.git'],
                 'contra-lib': ['master', 'https://github.com/openshift/contra-lib.git']]

libraries.each { name, repo ->
    library identifier: "${name}@${repo[0]}",
            retriever: modernSCM([$class: 'GitSCMSource',
                                  remote: repo[1]])

}

properties(
        [
                buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')),
                pipelineTriggers(
                        [[$class: 'CIBuildTrigger',
                          noSquash: true,
                          providerData: [
                              $class: 'RabbitMQSubscriberProviderData',
                              name: 'FedoraMessaging',
                              overrides: [
                                  topic: 'org.fedoraproject.prod.pungi.compose.status.change',
                                  queue: 'osci-pipelines-queue-4'
                              ],
                              checks: [
                                  [field: 'release_short', expectedValue: 'Fedora-Cloud$|Fedora$'],
                                  [field: 'release_type', expectedValue: 'ga'],
                                  [field: 'status', expectedValue: 'FINISHED'],
                                  [field: 'release_version', expectedValue: 'Rawhide']
                              ]
                          ]
                        ]]
                ),
                parameters(
                        [
                                string(defaultValue: "", description: 'CI_MESSAGE', name: 'CI_MESSAGE'),
                                string(defaultValue: "", description: 'MESSAGE_HEADERS', name: 'MESSAGE_HEADERS'),
                                string(defaultValue: "10", description: 'Number of interactions', name: 'INTERACTIONS')
                        ]
                )
        ]
)


fedoraImageTest()
